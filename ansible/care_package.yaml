- name: "Programming packages for Debian"
  hosts: localhost
  connection: local
  become: true
  tasks:
    - name: "Install Packages"
      register: aptout
      apt:
        state: latest
        name: 
          - sudo
          - g++
          - cmake
          - gcc
          - python3
          - python3-pip
          - python3-venv
          - tree
          - git
          - g++
          - zip
          - gzip
          - zstd 
          - net-tools
          - gdb
          - npm
          - nodejs
          - dos2unix
          - pkg-config
          - build-essential
          - checkinstall
          - software-properties-common
          - ttf-mscorefonts-installer
          - curl
          - wget
          - gnupg
          - lsb-release
          - tmux
          - rclone
          - rsync
    - debug: var=aptout

    - name: "Install Bat"
      register: aptout2
      apt:
        deb: https://github.com/sharkdp/bat/releases/download/v0.24.0/bat-musl_0.24.0_amd64.deb

    - debug: var=aptout2

    - name: "Download nvim AppImage"
      register: aptout3
      ansible.builtin.get_url:
        url: https://github.com/neovim/neovim/releases/download/stable/nvim.appimage
        dest: /usr/bin/nvim
        mode: '0775'
      
    - debug: var=aptout3

    - name: "Download Docker Engine Installation Script"
      register: aptout4
      ansible.builtin.get_url:
        url: https://get.docker.com
        dest: /tmp/getdocker.sh
    - debug: var=aptout4

    - name: "Install Docker"
      register: aptout5
      command:
        cmd: sh /tmp/getdocker.sh
    - debug: var=aptout5
      
    - name: Add Docker Group
      group:
        name: docker
        state: present

    - name: Add user to the group
      user:
        name: "{{ ansible_env.SUDO_USER | default(ansible_env.USER) }}"
        groups: docker
        append: yes

    - name: Make shorthand for localhost
      command:
        cmd: bash -c "grep -qxF '127.0.0.1   lh' /etc/hosts || echo '127.0.0.1   lh' >> /etc/hosts"
